{
  "language-selector": "language",
  "about-tab": "About larvae",
  "about-text": "Larvae is a CSS/JavaScript framework for AngularJS inspired by Bootstrap. I'm building it with the purpose of learning about AngularJS directives and also expanding my CSS knowledge.",
  "about-name": "I've chosen larvae as project name because, when I started it, there were a lot of moth larvae in my pantry due to a flour moth plague (Plodia interpunctella) that we had had in summer.",
  "under-construction": "(Note: both larvae and this page are under construction).",
  "components-tab": "Components",
  "only-css": "(Only CSS)",
  "buttons": "Buttons",
  "button-introduction": "Buttons have to be declared with the <code>btn</code> class.",
  "modifiers": "Modifiers",
  "button-modifiers": "There are some classes that you can add to elements with <code>btn</code> class to change their appearance.",
  "button-modifiers-round": "One of them is the <code>round</code> class. It makes the button corners to be more rounded.",
  "button-modifiers-icon": "Another class is <code>icon</code>. It is designed for buttons with only an icon inside. Its width is the same than its height, it's thicker than a normal button and it has no border.",
  "button-modifiers-both": "You can use <code>icon</code> and <code>round</code> classes together.",
  "button-modifiers-custom": "You can use your own modifier classes to change buttons' color.",
  "grouping": "Grouping",
  "button-grouping": "You can group buttons wrapping them in an element which has to have the <code>grouped</code> class.",
  "installation": "Installation",
  "include-it": "You only have to include the CSS and JavaScript sources from the <code>/src</code> folder of the project.",
  "checkboxes": "Checkboxes",
  "checkboxes-introduction": "Checkboxes have to be declared with their labels just after each one. There are three different classes:",
  "checkbox-left": "The first one is the <code>checkbox-left</code> class. It hides the original checkbox and adds a <code>before</code> pseudo-element to de label that displays a tiny box.",
  "checkbox-right": "Another class is <code>checkbox-right</code>. It works like the previous one but display an <code>after</code> peudo-element instead.",
  "checkbox-btn": "The last available class is <code>checkbox-btn</code>. It doesn't use pseudo-elements, it changes its label style to look like a button instead.",
  "checkbox-grouping": "You can group checkboxes wrapping them in an element which has to have the <code>grouped</code> class. It only works with checkboxes that has the <code>checkbox-btn</code> class.",
  "real-element": "Real element",
  "real-element-information": "As the real element is hidden, this is an example with it displayed.",
  "hidden-checkbox": "Hidden checkbox",
  "displayed-element": "Displayed element",
  "tabs": "Tabs",
  "angular-directive-css": "(AngularJS directive and CSS)",
  "tabs-introduction": "You can add tabs to show or hide different parts of your page. You have to add the <code>tabs</code> directive class to the tab container element and, in each element, a <code>data-reference</code> attribute referencing the id of the element which that tab is going to show (you can specify more than one id using spaces between them). Use the <code>selected</code> class if you want a tab to be shown by default.",
  "tabs-modifiers": "If you want to use tabs vertically, you have to add the <code>vertical</code> class to the tab container element.",
  "modals": "Modals",
  "modals-introduction": "There are three different AngularJS directives involved in the generation of modals. The main one is the <code>modal</code> directive class. The basic HTML tag structure is the following:",
  "modals-minimum-classes": "It has to have an element with the <code>modal-container</code> class containing at least an element with the <code>modal-body</code> class. The elements with <code>modal-header</code> and <code>modal-footer</code> classes are optional.",
  "modals-display": "If you want to launch it, you have to use the <code>modal-launcher</code> directive class and the <code>data-reference</code> attribute with the modal id. You can place it wherever you want and it will launch the modal when you click it. For example, you can place it in a button:"
}